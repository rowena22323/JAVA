답이 아니라 문제해결과정 (알고리즘)을 이해해야 합니다.

자바 기본개념 + loop + 메소드 (변수)

object oriented programming : Entity > CODE
>> 재사용성 + 효율적인 코드관리  //코드 는 최대한 아껴쓰자.
     객체지향의 모든 요소들을 프로그래밍 코드에 집어넣을 필요는 없다. 
>> 캡술화 : 
     상속성 : 하위클래스 extends 상위클래스 {}
     다형성


>> 추상화 : 단순화 시키는 작업 - ?? 추상화를 잘 할수록 좋은 프로그래밍이 된다. 
 	   추상화 레벨 ^ 

클래스와 인스턴스
 object : 상태(describing word > 인스턴스변수), 행동(verb > 메소드)
 class : an object is an instance of class

오버로딩
타입은 같은데 메소드 안의 변수가 다를 때?


생성자 - this (클래스 안에서 있는 자기자신을 가르킬때 : 이름 같으면 충돌나니깐)
           super() 바로 상위클래스의 생성자 호출을 명시할 수 있음
           this / super는 static이랑 같이 못씁씁. . . .
	객체 생성 후 변경해서 쓰고 싶을 때 생성자를 쓴다는데 뭔말인지 하나도 모르게싸

static :: 클래스변수 (공유변수) 앞에 반드시 붙여주기 ;static 선언

클래스 변수의 접근방법 > private로 선언되지만 않으면 외부에서도 접근 가능
클래스 : public, class 없으면 default접근
메소드 : static, public, private, protected 없으면 default접근

클래스이름으로도 바로 접근이 가능함. 객체에 상관없이 공유변수니까 클래스에만 접근하면 됨. 
>>클래스 변수 활용 : 변수에 대한 객체가 필요할때마다 계속 만들어야 되는데 안그래도 된당

>>클래스 메소드도 성격과 접근방법이 클래스 변수와 동일.
 	내부접근 : static이 아닌 메소드를 자기가 객체로 받아서 내부접근하면 static에 접근가능

 IS-A : ?? ***은 ~~ 이다.

HAS-A : 포함관계

메소드 오버라이딩 :: 

> 상위클래스의 참조변수가 참조할 수 있는 대상의 범위

모바일폰은 스마트폰이다.  스마트폰은 

생성자 오브젝트화로 생성자에서 호출하면서 코드중복 최소화
static 멤버번수, object들에 있는 초기화값으로 활동 상위타입도 

오버로딩 : 한 클래스 안에서

오버라이딩 : 클래스 간 상속관계에서 상위클래스에 정의된 메소드를 하위클래스에서 다시 정의하는 것.
                상속이 없으면 다형성, 재사용 다의미 없음.
	    상위 메소드 호출 super.methodname( ) : 가능은 하다 정도로만 알아둘것.

 * 참조변수 간 대입과 형변환 >


